name: build and run Audiomark Unit test and main application on C300 VHT
on:
  workflow_dispatch:
  push:
    branches: [ main, developing ]
  pull_request:
    branches: [ main, developing ]
  release:
    types: [published]


env:
  ARMLMD_LICENSE_FILE: /opt/data.dat
  ARM_TOOL_VARIANT: ult
  AC6_TOOLCHAIN_6_18_0: /opt/armcompiler/bin
  LD_LIBRARY_PATH: /opt/VHT
  AVH_PATH: /opt/VHT

jobs:


  build:
    name: Build and Run
    runs-on: AVH-Runner

    steps:
      - name: Checkout
        uses: actions/checkout@v3


      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: cpp
          queries: security-and-quality

      - name: Install Build tools, packs install and start builds
        working-directory: ./platform/cmsis
        run: |
        
          . <(curl https://aka.ms/vcpkg-init.sh -L)
          vcpkg activate

      
          mkdir ~/tools
          pushd ~/tools
          TOP=`pwd`
          echo "TOP is : "
          echo $TOP
          
          wget https://github.com/Open-CMSIS-Pack/cmsis-toolbox/releases/download/1.5.0/cmsis-toolbox-linux-amd64.tar.gz
          tar -zxvf  cmsis-toolbox-linux-amd64.tar.gz 
          sed -i -e '/^set(TOOLCHAIN_ROOT.*/c\set(TOOLCHAIN_ROOT "/opt/armcompiler/bin")' cmsis-toolbox-linux-amd64/etc/AC6.6.18.0.cmake 
          cat cmsis-toolbox-linux-amd64/etc/AC6.6.18.0.cmake
          
          export PATH=$PATH:$TOP/cmsis-toolbox-linux-amd64/bin/
          echo $PATH

          export CMSIS_COMPILER_ROOT=$TOP/cmsis-toolbox-linux-amd64/etc/
          export CMSIS_PACK_ROOT=$TOP/cmsis-pack

          echo "CMSIS_COMPILER_ROOT is : "
          echo $CMSIS_COMPILER_ROOT

          echo "CMSIS_PACK_ROOT is : "
          echo $CMSIS_PACK_ROOT


          popd

          echo "cpackget : $(which cpackget)"
          echo "csolution: $(which csolution)"
          echo "cbuild   : $(which cbuild)"
          echo "codeql   : $(which codeql)"

          cpackget init https://www.keil.com/pack/index.pidx
          
          echo cpackget update-index 

          cpackget update-index 
          
          echo cpackget add --agree-embedded-license https://github.com/GorgonMeducer/perf_counter/raw/main/cmsis-pack/GorgonMeducer.perf_counter.1.9.10.pack

          cpackget add --agree-embedded-license  https://github.com/GorgonMeducer/perf_counter/raw/659eb12026977d81391d90290706f9ac3c8efe7e/cmsis-pack/GorgonMeducer.perf_counter.1.9.11.pack

          csolution list packs -s audiomark.csolution.yml -m > required_packs.txt
          test -s required_packs.txt && cpackget add -a -f required_packs.txt || echo "Nothing to install"


          pwd
          
          csolution convert -s audiomark.csolution.yml
          cbuild audiomark_app.Release+FVP.cprj
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Run Audiomark
        working-directory: ./test      
        run: |
           echo "${{env.AVH_PATH}}" >> $GITHUB_PATH

           echo run CS300  
           /opt/VHT/VHT_MPS3_Corstone_SSE-300 out/audiomark_app/FVP/Release/Release+FVP.axf -f configs/model_config_sse300.txt  --stat $*



      # - name: Archive results
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: results
      #     path: |
      #       test/arm2d_*.zip
      #     retention-days: 1
      #     if-no-files-found: error
      #   if: always()
